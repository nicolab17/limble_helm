# Default values for nextgen.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


ingress:
  enabled: false
  className: ""
  proto: https
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: nico-lab.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

destinationRule:
  enabled: false
  spec: ""
  # spec: |
  #   host: appName.nameSpace.svc.cluster.local
  #   trafficPolicy:
  #     loadBalancer:
  #       simple: LEAST_REQUEST
        
authorizationPolicy:
  enabled: false
  spec: ""
  # spec: |
  #   selector:
  #     matchLabels:
  #       app.kubernetes.io/name: apName
  #   action: DENY
  #   rules:
  #   - from:
  #     - source:
  #         principals: ["cluster.local/ns/istio-ingress/sa/istio-ingress"]
  #     to:
  #     - operation:
  #         paths: ["/api/danger*", "/api/secret*"]


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


podSecurityContext: {}
  # fsGroup: 2000

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  enabled: false
  values: {}
  
# Create secret from AWS Secrets 
externalSecrets: []
  # - name: ssm-supersecret
  #   ssm_name: /amazingapp/staging/service-a/onebox/onebox-password
  #   secret_name: my-secret1

# Create secrets from SSM
externalSecretsSsm: []
  # - {k8_secre_name}: {ssm_name}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  #  eks.amazonaws.com/role-arn: arn:aws:iam::123456789:policy/ack-release-name-aqddd-policy
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

irsaRole:
  enabled: false
  name: testack
  account: "052456994109"
  policyDocument: ""
  # policyDocument: |
  #   {
  #       "Version": "2012-10-17",
  #       "Statement": [
  #           {
  #               "Sid": "",
  #               "Effect": "Allow",
  #               "Action": ["s3:*"],
  #               "Resource": [
  #                   "arn:aws:s3:::canary-test02"
  #               ]
  #           }
  #       ]
  #   }
  # oidcProvider: A75EB6DF5A3D3SDF489AEC49CC9580C2D


pvc:
  enabled: false
  labels: {}
  annotations: {}
  accessModes: ReadWriteOnce
  size: 20Gi
  storageClasses: gp2

pod:
  replicaCount: 2
  image:
    repository: nginx
    tag: ""
    pullPolicy: IfNotPresent
  livenessProbe: /
  readinessProbe: /
  podAnnotations: {}
  labels: {}
  configVersion: ""  
  env: []

onebox:
  enabled: false
  replicaCount: 1
  image:
    repository: nginx
    tag: ""
    pullPolicy: IfNotPresent
  livenessProbe: /
  readinessProbe: /
  annotations: {}
  labels: {}
  configVersion: ""  
  env: []

service:
  type: ClusterIP
  port: 80
  targetPort: http
  protocol: TCP

cluster:
  name: lab-eks
  account: "640168439333"
  region: us-east-2